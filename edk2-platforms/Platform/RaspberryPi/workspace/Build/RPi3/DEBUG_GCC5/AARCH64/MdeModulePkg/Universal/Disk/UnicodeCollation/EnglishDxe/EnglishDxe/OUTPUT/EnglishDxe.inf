## @file
#  English module that provides Unicode Collation supports.
#
#  This driver installs Unicode ISO 639-2 Collation and
#  RFC 4646 Unicode Collation 2 protocols based on feature flags
#  PcdUnicodeCollationSupport & PcdUnicodeCollation2Support respectively.
#  It allows code running in the boot services environment to perform lexical
#  comparison functions on Unicode strings for English languages.
#
#  Copyright (c) 2006 - 2018, Intel Corporation. All rights reserved.<BR>
#  SPDX-License-Identifier: BSD-2-Clause-Patent
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = EnglishDxe
  FILE_GUID                  = CD3BAFB6-50FB-4fe8-8E4E-AB74D2C1A600
  MODULE_TYPE                = UEFI_DRIVER
  VERSION_STRING             = 1.0
  ENTRY_POINT                = InitializeUnicodeCollationEng
  MODULE_UNI_FILE            = EnglishDxe.uni

[Packages.AARCH64]
  MdePkg/MdePkg.dec

[Binaries.AARCH64]
  PE32|EnglishDxe.efi

[PatchPcd.AARCH64]

[Protocols.AARCH64]
  ## SOMETIMES_PRODUCES
  gEfiUnicodeCollationProtocolGuid

  ## PRODUCES
  gEfiUnicodeCollation2ProtocolGuid

  ## SOMETIMES_CONSUMES
  gPcdProtocolGuid

  ## CONSUMES
  gEfiPcdProtocolGuid

  ## SOMETIMES_CONSUMES
  gGetPcdInfoProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiGetPcdInfoProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiLoadedImageProtocolGuid


[Ppis.AARCH64]

[Guids.AARCH64]

[PcdEx.AARCH64]

[LibraryClasses.AARCH64]
## @LIB_INSTANCES
#  MdePkg/Library/BaseMemoryLibOptDxe/BaseMemoryLibOptDxe.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/DxePcdLib/DxePcdLib.inf
#  MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsic.inf
#  ArmPlatformPkg/Library/PL011UartLib/PL011UartLib.inf
#  ArmPlatformPkg/Library/PL011UartClockLib/PL011UartClockLib.inf
#  MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib.inf
#  MdePkg/Library/BasePrintLib/BasePrintLib.inf
#  Platform/RaspberryPi/Library/DualSerialPortLib/DualSerialPortLib.inf
#  MdePkg/Library/BaseDebugLibSerialPort/BaseDebugLibSerialPort.inf
#  MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf
#  MdePkg/Library/UefiDriverEntryPoint/UefiDriverEntryPoint.inf
#  ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib.inf
#  MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib.inf

[Depex.AARCH64]
#  (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiBdsArchProtocolGuid AND gEfiCpuArchProtocolGuid AND gEfiMetronomeArchProtocolGuid AND gEfiMonotonicCounterArchProtocolGuid AND gEfiRealTimeClockArchProtocolGuid AND gEfiResetArchProtocolGuid AND gEfiRuntimeArchProtocolGuid AND gEfiSecurityArchProtocolGuid AND gEfiTimerArchProtocolGuid AND gEfiVariableWriteArchProtocolGuid AND gEfiVariableArchProtocolGuid AND gEfiWatchdogTimerArchProtocolGuid)

[UserExtensions.TianoCore."ExtraFiles"]
EnglishDxeExtra.uni



#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 EBC
#

[BuildOptions.AARCH64]
## @AsBuilt
##   GCC:DEBUG_GCC5_AARCH64_ASLPP_FLAGS = -x c -E -include AutoGen.h
##   GCC:DEBUG_GCC5_AARCH64_ASLDLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -Wl,--entry,ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT) -Wl,--defsym=PECOFF_HEADER_SIZE=0 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -z common-page-size=0x20
##   GCC:DEBUG_GCC5_AARCH64_GENFW_FLAGS = 
##   GCC:DEBUG_GCC5_AARCH64_OBJCOPY_FLAGS = objcopy not needed for
##   GCC:DEBUG_GCC5_AARCH64_DEPS_FLAGS = -MMD -MF $@.deps
##   GCC:DEBUG_GCC5_AARCH64_ASM_FLAGS = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) -c -x assembler -imacros AutoGen.h -mlittle-endian
##   GCC:DEBUG_GCC5_AARCH64_CC_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -ffunction-sections -fdata-sections -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -mlittle-endian -fno-short-enums -fverbose-asm -funsigned-char  -ffunction-sections -fdata-sections -Wno-address -fno-asynchronous-unwind-tables -fno-unwind-tables -fno-pic -fno-pie -ffixed-x18 -mcmodel=small -flto -Wno-unused-but-set-variable -Wno-unused-const-variable
##   GCC:DEBUG_GCC5_AARCH64_ASMLINK_FLAGS = /nologo /tiny
##   GCC:DEBUG_GCC5_AARCH64_VFR_FLAGS = -l -n
##   GCC:DEBUG_GCC5_AARCH64_ASLCC_FLAGS = -x c -fno-lto
##   GCC:DEBUG_GCC5_AARCH64_APP_FLAGS = 
##   GCC:DEBUG_GCC5_AARCH64_OPTROM_FLAGS = -e
##   GCC:DEBUG_GCC5_AARCH64_DTC_FLAGS = -H epapr
##   GCC:DEBUG_GCC5_AARCH64_MAKE_FLAGS = -s
##   GCC:DEBUG_GCC5_AARCH64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:DEBUG_GCC5_AARCH64_RC_FLAGS = -I binary -O elf64-littleaarch64 -B aarch64 --rename-section .data=.hii
##   GCC:DEBUG_GCC5_AARCH64_PP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E -x assembler-with-cpp -include AutoGen.h -DOPENSBI_EXTERNAL_SBI_TYPES=OpensbiTypes.h
##   GCC:DEBUG_GCC5_AARCH64_VFRPP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h
##   GCC:DEBUG_GCC5_AARCH64_DLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -z common-page-size=0x1000 -flto -Os -L/home/hwdk/UEFIPROG/EDKHOME/edk2/ArmPkg/Library/GccLto -llto-aarch64 -Wl,-plugin-opt=-pass-through=-llto-aarch64 -Wno-lto-type-mismatch -Wl,--fix-cortex-a53-843419
##   GCC:DEBUG_GCC5_AARCH64_PLATFORM_FLAGS = 
##   GCC:DEBUG_GCC5_AARCH64_ASL_FLAGS = 
##   GCC:DEBUG_GCC5_AARCH64_NASMB_FLAGS = -f bin
##   GCC:DEBUG_GCC5_AARCH64_DLINK2_FLAGS = -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wl,--defsym=PECOFF_HEADER_SIZE=0x228 -Wno-error
##   GCC:DEBUG_GCC5_AARCH64_DTCPP_FLAGS = -E -x assembler-with-cpp -imacros AutoGen.h -nostdinc -undef
